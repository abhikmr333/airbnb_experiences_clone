{"ast":null,"code":"var _jsxFileName = \"F:\\\\scrimbaReact\\\\Airbnb_Expriences_clone\\\\airbnb_experiences_clone\\\\src\\\\components\\\\App.js\";\nimport React from \"react\";\nimport Navbar from \"./Navbar.js\";\nimport Hero from \"./Hero.js\";\nimport Card from \"./Card.js\";\nimport experiences from \"../data.js\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  //mapping over data to create instances of </Card > component to render later\n  const card = experiences.map(experience => {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      //passing objects as prop\n      propsObject: experience\n\n      // img={experience.coverImg}\n      // rating={experience.stats.rating}\n      // reviewCount={experience.stats.reviewCount}\n      // location={experience.location}\n      // openSpots={experience.openSpots}\n      // title={experience.title}\n      // price={experience.price}\n    }, experience.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Hero, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cards-container\",\n      children: card\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Navbar","Hero","Card","experiences","jsxDEV","_jsxDEV","Fragment","_Fragment","App","card","map","experience","propsObject","id","fileName","_jsxFileName","lineNumber","columnNumber","children","className","_c","$RefreshReg$"],"sources":["F:/scrimbaReact/Airbnb_Expriences_clone/airbnb_experiences_clone/src/components/App.js"],"sourcesContent":["import React from \"react\";\r\nimport Navbar from \"./Navbar.js\";\r\nimport Hero from \"./Hero.js\";\r\nimport Card from \"./Card.js\";\r\nimport experiences from \"../data.js\";\r\n\r\nexport default function App() {\r\n    //mapping over data to create instances of </Card > component to render later\r\n    const card = experiences.map((experience) => {\r\n        return (\r\n            <Card\r\n                key={experience.id}\r\n                //passing objects as prop\r\n                propsObject={experience}\r\n\r\n                // img={experience.coverImg}\r\n                // rating={experience.stats.rating}\r\n                // reviewCount={experience.stats.reviewCount}\r\n                // location={experience.location}\r\n                // openSpots={experience.openSpots}\r\n                // title={experience.title}\r\n                // price={experience.price}\r\n            />\r\n        );\r\n    });\r\n    return (\r\n        <>\r\n            <Navbar />\r\n            <Hero />\r\n            <div className=\"cards-container\">{card}</div>\r\n        </>\r\n    );\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,aAAa;AAChC,OAAOC,IAAI,MAAM,WAAW;AAC5B,OAAOC,IAAI,MAAM,WAAW;AAC5B,OAAOC,WAAW,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAErC,eAAe,SAASC,GAAGA,CAAA,EAAG;EAC1B;EACA,MAAMC,IAAI,GAAGN,WAAW,CAACO,GAAG,CAAEC,UAAU,IAAK;IACzC,oBACIN,OAAA,CAACH,IAAI;MAED;MACAU,WAAW,EAAED;;MAEb;MACA;MACA;MACA;MACA;MACA;MACA;IAAA,GAVKA,UAAU,CAACE,EAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAWrB,CAAC;EAEV,CAAC,CAAC;EACF,oBACIZ,OAAA,CAAAE,SAAA;IAAAW,QAAA,gBACIb,OAAA,CAACL,MAAM;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVZ,OAAA,CAACJ,IAAI;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACRZ,OAAA;MAAKc,SAAS,EAAC,iBAAiB;MAAAD,QAAA,EAAET;IAAI;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA,eAC/C,CAAC;AAEX;AAACG,EAAA,GA1BuBZ,GAAG;AAAA,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}